{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/2021-uam-4619/2021-uam-4619/blob/main/Big%20data%20Analytics\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Hd5QLP9oCOBo",
        "outputId": "c8b74179-65a5-45c7-833b-e409446c6cec"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting pyspark\n",
            "  Downloading pyspark-3.5.1.tar.gz (317.0 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m317.0/317.0 MB\u001b[0m \u001b[31m4.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: py4j==0.10.9.7 in /usr/local/lib/python3.10/dist-packages (from pyspark) (0.10.9.7)\n",
            "Building wheels for collected packages: pyspark\n"
          ]
        }
      ],
      "source": [
        "# prompt: data analize by using py spark and install library of pyspark\n",
        "\n",
        "!pip install pyspark\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: write a code to apply data visualization on this data\n",
        "\n",
        "import pyspark\n",
        "pip\n",
        "# Create a SparkSession\n",
        "spark = pyspark.sql.SparkSession.builder.getOrCreate()\n",
        "\n",
        "# Load the data into a DataFrame\n",
        "df = spark.read.csv('/content/Attendance data.csv', header=True, inferSchema=True)\n",
        "\n",
        "# Print the schema of the DataFrame\n",
        "df.printSchema()\n",
        "\n",
        "# Show the first few rows of the DataFrame\n",
        "df.show(5)\n",
        "\n",
        "# Create a bar chart of the number of passengers by sex\n",
        "df.groupBy('Sex').count().sort('count').toPandas().plot(kind='bar', x='Sex', y='count')\n",
        "\n",
        "# Create a pie chart of the proportion of passengers by class\n",
        "df.groupBy('Pclass').count().sort('count').toPandas().plot(kind='pie', y='count', autopct='%1.1f%%')\n",
        "\n",
        "# Show the correlation matrix of the numerical columns\n",
        "df.select('Survived', 'Pclass', 'Age', 'SibSp', 'Parch', 'Fare').corr().toPandas()\n"
      ],
      "metadata": {
        "id": "zF8mUIsNxXHj",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 222
        },
        "outputId": "2ae5534f-7b65-493d-db11-879811798375"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'pyspark' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-3-eb732bfb403c>\u001b[0m in \u001b[0;36m<cell line: 6>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# Create a SparkSession\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0mspark\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpyspark\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msql\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSparkSession\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbuilder\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetOrCreate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;31m# Load the data into a DataFrame\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'pyspark' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: write a code to apply pyspark library function on data set\n",
        "# data set we provide you\n",
        "# apply all operation on this data set that are available in the pyspark library\n",
        "\n",
        "from pyspark.sql import SparkSession\n",
        "from pyspark.sql.functions import *\n",
        "\n",
        "spark = SparkSession.builder.appName('pyspark_example').getOrCreate()\n",
        "\n",
        "# Load the data set\n",
        "df = spark.read.csv('/content/Attendance data.csv', header=True)\n",
        "\n",
        "# Print the schema of the data set\n",
        "df.printSchema()\n",
        "\n",
        "# Show the first few rows of the data set\n",
        "df.show(5)\n",
        "\n",
        "# Select specific columns\n",
        "df.select('School DBN', 'Date').show()\n",
        "\n",
        "# Filter the data set\n",
        "df.filter(df['Absent'] > 10).show()\n",
        "\n",
        "# Group the data set\n",
        "df.groupBy('Present').count().show()\n",
        "\n",
        "# Join two data sets\n",
        "df1 = df.select('Absent', 'Present')\n",
        "df2 = df.select('School DBN', 'Enrolled')\n",
        "\n",
        "\n",
        "# Perform aggregations\n",
        "df.agg({'Present': 'max', 'Absent': 'min'}).show()\n",
        "\n",
        "# Use SQL statements\n",
        "df.createOrReplaceTempView('table_name')\n",
        "spark.sql('SELECT * FROM table_name WHERE Absent < 10').show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a19lzKvMICkk",
        "outputId": "44fd0606-90af-402e-838d-20d247ada352"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "root\n",
            " |-- School DBN: string (nullable = true)\n",
            " |-- Date: string (nullable = true)\n",
            " |-- Enrolled: string (nullable = true)\n",
            " |-- Absent: string (nullable = true)\n",
            " |-- Present: string (nullable = true)\n",
            " |-- Released: string (nullable = true)\n",
            "\n",
            "+----------+--------+--------+------+-------+--------+\n",
            "|School DBN|    Date|Enrolled|Absent|Present|Released|\n",
            "+----------+--------+--------+------+-------+--------+\n",
            "|    01M015|20180905|     172|    19|    153|       0|\n",
            "|    01M015|20180906|     171|    17|    154|       0|\n",
            "|    01M015|20180907|     172|    14|    158|       0|\n",
            "|    01M015|20180912|     173|     7|    166|       0|\n",
            "|    01M015|20180913|     173|     9|    164|       0|\n",
            "+----------+--------+--------+------+-------+--------+\n",
            "only showing top 5 rows\n",
            "\n",
            "+----------+--------+\n",
            "|School DBN|    Date|\n",
            "+----------+--------+\n",
            "|    01M015|20180905|\n",
            "|    01M015|20180906|\n",
            "|    01M015|20180907|\n",
            "|    01M015|20180912|\n",
            "|    01M015|20180913|\n",
            "|    01M015|20180914|\n",
            "|    01M015|20180917|\n",
            "|    01M015|20180918|\n",
            "|    01M015|20180920|\n",
            "|    01M015|20180921|\n",
            "|    01M015|20180924|\n",
            "|    01M015|20180925|\n",
            "|    01M015|20180926|\n",
            "|    01M015|20180927|\n",
            "|    01M015|20180928|\n",
            "|    01M015|20181001|\n",
            "|    01M015|20181002|\n",
            "|    01M015|20181003|\n",
            "|    01M015|20181004|\n",
            "|    01M015|20181005|\n",
            "+----------+--------+\n",
            "only showing top 20 rows\n",
            "\n",
            "+----------+--------+--------+------+-------+--------+\n",
            "|School DBN|    Date|Enrolled|Absent|Present|Released|\n",
            "+----------+--------+--------+------+-------+--------+\n",
            "|    01M015|20180905|     172|    19|    153|       0|\n",
            "|    01M015|20180906|     171|    17|    154|       0|\n",
            "|    01M015|20180907|     172|    14|    158|       0|\n",
            "|    01M015|20180914|     173|    11|    162|       0|\n",
            "|    01M015|20180924|     174|    13|    161|       0|\n",
            "|    01M015|20180928|     173|    15|    158|       0|\n",
            "|    01M015|20181009|     170|    14|    156|       0|\n",
            "|    01M015|20181010|     170|    11|    159|       0|\n",
            "|    01M015|20181012|     170|    11|    159|       0|\n",
            "|    01M015|20181015|     170|    11|    159|       0|\n",
            "|    01M015|20181019|     170|    14|    156|       0|\n",
            "|    01M015|20181022|     170|    20|    150|       0|\n",
            "|    01M015|20181029|     174|    11|    163|       0|\n",
            "|    01M015|20181031|     174|    13|    161|       0|\n",
            "|    01M015|20181102|     174|    17|    157|       0|\n",
            "|    01M015|20181108|     174|    13|    161|       0|\n",
            "|    01M015|20181109|     174|    11|    163|       0|\n",
            "|    01M015|20181113|     174|    14|    160|       0|\n",
            "|    01M015|20181115|     174|    49|    125|       0|\n",
            "|    01M015|20181116|     174|    22|    152|       0|\n",
            "+----------+--------+--------+------+-------+--------+\n",
            "only showing top 20 rows\n",
            "\n",
            "+-------+-----+\n",
            "|Present|count|\n",
            "+-------+-----+\n",
            "|    296|  353|\n",
            "|    675|  106|\n",
            "|    467|  236|\n",
            "|    691|   85|\n",
            "|    829|   68|\n",
            "|   1090|   17|\n",
            "|   1572|   16|\n",
            "|   3210|    2|\n",
            "|   1512|   12|\n",
            "|   1159|   19|\n",
            "|   1436|    5|\n",
            "|    125|  165|\n",
            "|    451|  375|\n",
            "|   1669|    4|\n",
            "|    853|   55|\n",
            "|    800|   84|\n",
            "|   1394|   15|\n",
            "|   1372|   10|\n",
            "|    944|   54|\n",
            "|    666|  122|\n",
            "+-------+-----+\n",
            "only showing top 20 rows\n",
            "\n",
            "+------------+-----------+\n",
            "|max(Present)|min(Absent)|\n",
            "+------------+-----------+\n",
            "|         999|          0|\n",
            "+------------+-----------+\n",
            "\n",
            "+----------+--------+--------+------+-------+--------+\n",
            "|School DBN|    Date|Enrolled|Absent|Present|Released|\n",
            "+----------+--------+--------+------+-------+--------+\n",
            "|    01M015|20180912|     173|     7|    166|       0|\n",
            "|    01M015|20180913|     173|     9|    164|       0|\n",
            "|    01M015|20180918|     174|     7|    167|       0|\n",
            "|    01M015|20180920|     174|     7|    167|       0|\n",
            "|    01M015|20180921|     174|     8|    166|       0|\n",
            "|    01M015|20180925|     174|     9|    165|       0|\n",
            "|    01M015|20180926|     174|     6|    168|       0|\n",
            "|    01M015|20180927|     173|     7|    166|       0|\n",
            "|    01M015|20181001|     172|     4|    168|       0|\n",
            "|    01M015|20181002|     172|     7|    165|       0|\n",
            "|    01M015|20181003|     171|     8|    163|       0|\n",
            "|    01M015|20181005|     170|     8|    162|       0|\n",
            "|    01M015|20181011|     170|     9|    161|       0|\n",
            "|    01M015|20181016|     170|     6|    164|       0|\n",
            "|    01M015|20181017|     170|     5|    165|       0|\n",
            "|    01M015|20181018|     170|     8|    162|       0|\n",
            "|    01M015|20181023|     171|     5|    166|       0|\n",
            "|    01M015|20181024|     171|     9|    162|       0|\n",
            "|    01M015|20181025|     171|     6|    165|       0|\n",
            "|    01M015|20181030|     174|     6|    168|       0|\n",
            "+----------+--------+--------+------+-------+--------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: write a code to apply more operation on this data set using pyspark\n",
        "\n",
        "# Create a new column that calculates the percentage of attendance for each row\n",
        "df = df.withColumn('Attendance_Percentage', (df['Present'] / df['Enrolled']) * 100)\n",
        "\n",
        "# Show the first few rows of the new data set\n",
        "df.show(5)\n",
        "\n",
        "# Group the data set by school DBN and calculate the average attendance percentage for each school\n",
        "df.groupBy('School DBN').agg(avg('Attendance_Percentage').alias('Average Attendance Percentage')).show()\n",
        "\n",
        "# Filter the data set to only include rows where the attendance percentage is greater than 90%\n",
        "df.filter(df['Attendance_Percentage'] > 90).show()\n",
        "\n",
        "# Join the data set with another data set that contains information about the schools\n",
        "school_info_df = spark.read.csv('/content/Attendance data.csv', header=True)\n",
        "df_joined = df.join(school_info_df, on='School DBN', how='left')\n",
        "\n",
        "# Show the first few rows of the joined data set\n",
        "df_joined.show(5)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IgLC8rCxPYOs",
        "outputId": "fd1e503a-c9fc-4654-e9f5-0bc3071b01d3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+----------+--------+--------+------+-------+--------+---------------------+\n",
            "|School DBN|    Date|Enrolled|Absent|Present|Released|Attendance_Percentage|\n",
            "+----------+--------+--------+------+-------+--------+---------------------+\n",
            "|    01M015|20180905|     172|    19|    153|       0|    88.95348837209302|\n",
            "|    01M015|20180906|     171|    17|    154|       0|    90.05847953216374|\n",
            "|    01M015|20180907|     172|    14|    158|       0|    91.86046511627907|\n",
            "|    01M015|20180912|     173|     7|    166|       0|    95.95375722543352|\n",
            "|    01M015|20180913|     173|     9|    164|       0|    94.79768786127167|\n",
            "+----------+--------+--------+------+-------+--------+---------------------+\n",
            "only showing top 5 rows\n",
            "\n",
            "+----------+-----------------------------+\n",
            "|School DBN|Average Attendance Percentage|\n",
            "+----------+-----------------------------+\n",
            "|    02M042|             97.0815187032422|\n",
            "|    02M529|            77.99800667280208|\n",
            "|    08X093|            89.41576951728263|\n",
            "|    01M064|            88.60301019271402|\n",
            "|    01M539|            93.33303405801364|\n",
            "|    02M177|            94.94347188034322|\n",
            "|    02M427|            86.33483501094625|\n",
            "|    07X527|            85.53237732554233|\n",
            "|    10X396|            94.15690456035938|\n",
            "|    11X180|            94.73699125672961|\n",
            "|    14K319|             91.5184298002515|\n",
            "|    19K273|            88.23808331209337|\n",
            "|    03M084|            93.62071315748248|\n",
            "|    03M404|             65.8725194399873|\n",
            "|    08X312|             83.6187110903423|\n",
            "|    09X555|            94.29859677253387|\n",
            "|    10X209|            93.61080592071771|\n",
            "|    12X458|            93.84779218148665|\n",
            "|    18K208|            91.63126419528825|\n",
            "|    01M450|            94.71006778618207|\n",
            "+----------+-----------------------------+\n",
            "only showing top 20 rows\n",
            "\n",
            "+----------+--------+--------+------+-------+--------+---------------------+\n",
            "|School DBN|    Date|Enrolled|Absent|Present|Released|Attendance_Percentage|\n",
            "+----------+--------+--------+------+-------+--------+---------------------+\n",
            "|    01M015|20180906|     171|    17|    154|       0|    90.05847953216374|\n",
            "|    01M015|20180907|     172|    14|    158|       0|    91.86046511627907|\n",
            "|    01M015|20180912|     173|     7|    166|       0|    95.95375722543352|\n",
            "|    01M015|20180913|     173|     9|    164|       0|    94.79768786127167|\n",
            "|    01M015|20180914|     173|    11|    162|       0|    93.64161849710982|\n",
            "|    01M015|20180917|     173|    10|    163|       0|    94.21965317919076|\n",
            "|    01M015|20180918|     174|     7|    167|       0|    95.97701149425288|\n",
            "|    01M015|20180920|     174|     7|    167|       0|    95.97701149425288|\n",
            "|    01M015|20180921|     174|     8|    166|       0|    95.40229885057471|\n",
            "|    01M015|20180924|     174|    13|    161|       0|    92.52873563218391|\n",
            "|    01M015|20180925|     174|     9|    165|       0|    94.82758620689656|\n",
            "|    01M015|20180926|     174|     6|    168|       0|    96.55172413793103|\n",
            "|    01M015|20180927|     173|     7|    166|       0|    95.95375722543352|\n",
            "|    01M015|20180928|     173|    15|    158|       0|    91.32947976878613|\n",
            "|    01M015|20181001|     172|     4|    168|       0|    97.67441860465115|\n",
            "|    01M015|20181002|     172|     7|    165|       0|    95.93023255813954|\n",
            "|    01M015|20181003|     171|     8|    163|       0|    95.32163742690058|\n",
            "|    01M015|20181004|     171|    10|    161|       0|    94.15204678362574|\n",
            "|    01M015|20181005|     170|     8|    162|       0|    95.29411764705881|\n",
            "|    01M015|20181009|     170|    14|    156|       0|    91.76470588235294|\n",
            "+----------+--------+--------+------+-------+--------+---------------------+\n",
            "only showing top 20 rows\n",
            "\n",
            "+----------+--------+--------+------+-------+--------+---------------------+--------+--------+------+-------+--------+\n",
            "|School DBN|    Date|Enrolled|Absent|Present|Released|Attendance_Percentage|    Date|Enrolled|Absent|Present|Released|\n",
            "+----------+--------+--------+------+-------+--------+---------------------+--------+--------+------+-------+--------+\n",
            "|    01M015|20180905|     172|    19|    153|       0|    88.95348837209302|20190626|     174|    45|    129|       0|\n",
            "|    01M015|20180905|     172|    19|    153|       0|    88.95348837209302|20190625|     174|    37|    137|       0|\n",
            "|    01M015|20180905|     172|    19|    153|       0|    88.95348837209302|20190624|     174|    21|    153|       0|\n",
            "|    01M015|20180905|     172|    19|    153|       0|    88.95348837209302|20190621|     174|    27|    147|       0|\n",
            "|    01M015|20180905|     172|    19|    153|       0|    88.95348837209302|20190620|     174|    21|    153|       0|\n",
            "+----------+--------+--------+------+-------+--------+---------------------+--------+--------+------+-------+--------+\n",
            "only showing top 5 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: write a code\n",
        "# which student have absent less then 60 percent\n",
        "# to show this in  columns formate\n",
        "\n",
        "df_less_than_60_percent = df.filter(df['Absent'] < (df['Enrolled'] * 0.6))\n",
        "df_less_than_60_percent.select('School DBN', 'Absent', 'Enrolled').show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Sz004SY4P3k9",
        "outputId": "9ea5edd8-7ef5-4d88-f28a-4820f81a61aa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+----------+------+--------+\n",
            "|School DBN|Absent|Enrolled|\n",
            "+----------+------+--------+\n",
            "|    01M015|    19|     172|\n",
            "|    01M015|    17|     171|\n",
            "|    01M015|    14|     172|\n",
            "|    01M015|     7|     173|\n",
            "|    01M015|     9|     173|\n",
            "|    01M015|    11|     173|\n",
            "|    01M015|    10|     173|\n",
            "|    01M015|     7|     174|\n",
            "|    01M015|     7|     174|\n",
            "|    01M015|     8|     174|\n",
            "|    01M015|    13|     174|\n",
            "|    01M015|     9|     174|\n",
            "|    01M015|     6|     174|\n",
            "|    01M015|     7|     173|\n",
            "|    01M015|    15|     173|\n",
            "|    01M015|     4|     172|\n",
            "|    01M015|     7|     172|\n",
            "|    01M015|     8|     171|\n",
            "|    01M015|    10|     171|\n",
            "|    01M015|     8|     170|\n",
            "+----------+------+--------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: write a code to apply more operation using this datas set\n",
        "# and making graph for big data analytics\n",
        "\n",
        "# Create a histogram of the attendance percentage\n",
        "\n",
        "\n",
        "# Create a bar chart of the average attendance percentage for each school\n",
        "df.groupBy('School DBN').agg(avg('Attendance_Percentage').alias('Average Attendance Percentage')).sort('Average Attendance Percentage').show(truncate=False)\n",
        "\n",
        "# Create a line chart of the trend in attendance percentage over time\n",
        "df.groupBy('Date').agg(avg('Attendance_Percentage').alias('Average Attendance Percentage')).sort('Date').show()\n",
        "\n",
        "# Create a scatter plot of the relationship between attendance percentage and enrollment\n",
        "df.select('Attendance_Percentage', 'Enrolled').show()\n",
        "\n",
        "# Create a correlation matrix of all the numerical columns in the data set\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HiQdRbKis_pZ",
        "outputId": "0546521f-7880-4934-c973-8faa7142a530"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+----------+-----------------------------+\n",
            "|School DBN|Average Attendance Percentage|\n",
            "+----------+-----------------------------+\n",
            "|02M560    |43.78986417321267            |\n",
            "|13K616    |46.290679146925946           |\n",
            "|21K728    |49.17724024882796            |\n",
            "|17K646    |49.75670488283365            |\n",
            "|16K669    |52.01496300303366            |\n",
            "|08X537    |53.11046295608791            |\n",
            "|02M544    |53.15552345597043            |\n",
            "|07X379    |53.20269596129669            |\n",
            "|01M458    |53.34341833524563            |\n",
            "|03M505    |54.508729503989265           |\n",
            "|15K698    |55.42517647231528            |\n",
            "|02M570    |55.532035129622074           |\n",
            "|07X557    |56.537290688113494           |\n",
            "|07X381    |56.96897177667511            |\n",
            "|15K529    |57.95343465768183            |\n",
            "|01M650    |57.975118512889374           |\n",
            "|05M285    |58.7539258921044             |\n",
            "|13K553    |59.33091864296865            |\n",
            "|04M310    |59.66536543798229            |\n",
            "|08X377    |60.43575331248774            |\n",
            "+----------+-----------------------------+\n",
            "only showing top 20 rows\n",
            "\n",
            "+--------+-----------------------------+\n",
            "|    Date|Average Attendance Percentage|\n",
            "+--------+-----------------------------+\n",
            "|20180904|            97.72727272727273|\n",
            "|20180905|             86.6610446975328|\n",
            "|20180906|            88.52489746673419|\n",
            "|20180907|             88.2453900687485|\n",
            "|20180912|            92.34755217168262|\n",
            "|20180913|            92.35383104635062|\n",
            "|20180914|             91.6318776220662|\n",
            "|20180917|            92.30831930534549|\n",
            "|20180918|            91.90724054004022|\n",
            "|20180920|             92.8016059086833|\n",
            "|20180921|            91.34843632252175|\n",
            "|20180924|            92.04906378119335|\n",
            "|20180925|            89.54767286343821|\n",
            "|20180926|            92.61575600401368|\n",
            "|20180927|            93.02857816853599|\n",
            "|20180928|             89.8716707809637|\n",
            "|20181001|            92.19474293390533|\n",
            "|20181002|             92.9547651795699|\n",
            "|20181003|             93.1604506041525|\n",
            "|20181004|            92.89062014581307|\n",
            "+--------+-----------------------------+\n",
            "only showing top 20 rows\n",
            "\n",
            "+---------------------+--------+\n",
            "|Attendance_Percentage|Enrolled|\n",
            "+---------------------+--------+\n",
            "|    88.95348837209302|     172|\n",
            "|    90.05847953216374|     171|\n",
            "|    91.86046511627907|     172|\n",
            "|    95.95375722543352|     173|\n",
            "|    94.79768786127167|     173|\n",
            "|    93.64161849710982|     173|\n",
            "|    94.21965317919076|     173|\n",
            "|    95.97701149425288|     174|\n",
            "|    95.97701149425288|     174|\n",
            "|    95.40229885057471|     174|\n",
            "|    92.52873563218391|     174|\n",
            "|    94.82758620689656|     174|\n",
            "|    96.55172413793103|     174|\n",
            "|    95.95375722543352|     173|\n",
            "|    91.32947976878613|     173|\n",
            "|    97.67441860465115|     172|\n",
            "|    95.93023255813954|     172|\n",
            "|    95.32163742690058|     171|\n",
            "|    94.15204678362574|     171|\n",
            "|    95.29411764705881|     170|\n",
            "+---------------------+--------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: write to apply statistics and removing null values\n",
        "\n",
        "# Calculate the mean of the 'Present' column\n",
        "df.select(mean('Present')).show()\n",
        "\n",
        "# Calculate the standard deviation of the 'Absent' column\n",
        "df.select(stddev('Absent')).show()\n",
        "\n",
        "# Calculate the variance of the 'Present' column\n",
        "df.select(variance('Present')).show()\n",
        "\n",
        "# Calculate the covariance between 'Present' and 'Absent' columns\n",
        "\n",
        "\n",
        "# Calculate the correlation between 'Present' and 'Absent' columns\n",
        "df.select(corr('Present', 'Absent')).show()\n",
        "\n",
        "# Drop rows with null values\n",
        "df.dropna().show()\n",
        "\n",
        "# Drop columns with null values\n",
        "df.drop('School DBN').show()\n",
        "\n",
        "# Fill null values with a specific value\n",
        "df.na.fill(0).show()\n",
        "\n",
        "# Fill null values with the mean of the column\n",
        "df.na.fill(df.select(mean('Present')).collect()[0][0]).show()"
      ],
      "metadata": {
        "id": "FkvQF0dYvEOz",
        "outputId": "f5019577-7c8e-4ac3-8748-c51777ce6738",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+------------------+\n",
            "|      avg(Present)|\n",
            "+------------------+\n",
            "|483.50684718245253|\n",
            "+------------------+\n",
            "\n",
            "+-----------------+\n",
            "|   stddev(Absent)|\n",
            "+-----------------+\n",
            "|46.71628703078348|\n",
            "+-----------------+\n",
            "\n",
            "+------------------+\n",
            "| var_samp(Present)|\n",
            "+------------------+\n",
            "|154993.70666939596|\n",
            "+------------------+\n",
            "\n",
            "+---------------------+\n",
            "|corr(Present, Absent)|\n",
            "+---------------------+\n",
            "|   0.4273380999973413|\n",
            "+---------------------+\n",
            "\n",
            "+----------+--------+--------+------+-------+--------+---------------------+\n",
            "|School DBN|    Date|Enrolled|Absent|Present|Released|Attendance_Percentage|\n",
            "+----------+--------+--------+------+-------+--------+---------------------+\n",
            "|    01M015|20180905|     172|    19|    153|       0|    88.95348837209302|\n",
            "|    01M015|20180906|     171|    17|    154|       0|    90.05847953216374|\n",
            "|    01M015|20180907|     172|    14|    158|       0|    91.86046511627907|\n",
            "|    01M015|20180912|     173|     7|    166|       0|    95.95375722543352|\n",
            "|    01M015|20180913|     173|     9|    164|       0|    94.79768786127167|\n",
            "|    01M015|20180914|     173|    11|    162|       0|    93.64161849710982|\n",
            "|    01M015|20180917|     173|    10|    163|       0|    94.21965317919076|\n",
            "|    01M015|20180918|     174|     7|    167|       0|    95.97701149425288|\n",
            "|    01M015|20180920|     174|     7|    167|       0|    95.97701149425288|\n",
            "|    01M015|20180921|     174|     8|    166|       0|    95.40229885057471|\n",
            "|    01M015|20180924|     174|    13|    161|       0|    92.52873563218391|\n",
            "|    01M015|20180925|     174|     9|    165|       0|    94.82758620689656|\n",
            "|    01M015|20180926|     174|     6|    168|       0|    96.55172413793103|\n",
            "|    01M015|20180927|     173|     7|    166|       0|    95.95375722543352|\n",
            "|    01M015|20180928|     173|    15|    158|       0|    91.32947976878613|\n",
            "|    01M015|20181001|     172|     4|    168|       0|    97.67441860465115|\n",
            "|    01M015|20181002|     172|     7|    165|       0|    95.93023255813954|\n",
            "|    01M015|20181003|     171|     8|    163|       0|    95.32163742690058|\n",
            "|    01M015|20181004|     171|    10|    161|       0|    94.15204678362574|\n",
            "|    01M015|20181005|     170|     8|    162|       0|    95.29411764705881|\n",
            "+----------+--------+--------+------+-------+--------+---------------------+\n",
            "only showing top 20 rows\n",
            "\n",
            "+--------+--------+------+-------+--------+---------------------+\n",
            "|    Date|Enrolled|Absent|Present|Released|Attendance_Percentage|\n",
            "+--------+--------+------+-------+--------+---------------------+\n",
            "|20180905|     172|    19|    153|       0|    88.95348837209302|\n",
            "|20180906|     171|    17|    154|       0|    90.05847953216374|\n",
            "|20180907|     172|    14|    158|       0|    91.86046511627907|\n",
            "|20180912|     173|     7|    166|       0|    95.95375722543352|\n",
            "|20180913|     173|     9|    164|       0|    94.79768786127167|\n",
            "|20180914|     173|    11|    162|       0|    93.64161849710982|\n",
            "|20180917|     173|    10|    163|       0|    94.21965317919076|\n",
            "|20180918|     174|     7|    167|       0|    95.97701149425288|\n",
            "|20180920|     174|     7|    167|       0|    95.97701149425288|\n",
            "|20180921|     174|     8|    166|       0|    95.40229885057471|\n",
            "|20180924|     174|    13|    161|       0|    92.52873563218391|\n",
            "|20180925|     174|     9|    165|       0|    94.82758620689656|\n",
            "|20180926|     174|     6|    168|       0|    96.55172413793103|\n",
            "|20180927|     173|     7|    166|       0|    95.95375722543352|\n",
            "|20180928|     173|    15|    158|       0|    91.32947976878613|\n",
            "|20181001|     172|     4|    168|       0|    97.67441860465115|\n",
            "|20181002|     172|     7|    165|       0|    95.93023255813954|\n",
            "|20181003|     171|     8|    163|       0|    95.32163742690058|\n",
            "|20181004|     171|    10|    161|       0|    94.15204678362574|\n",
            "|20181005|     170|     8|    162|       0|    95.29411764705881|\n",
            "+--------+--------+------+-------+--------+---------------------+\n",
            "only showing top 20 rows\n",
            "\n",
            "+----------+--------+--------+------+-------+--------+---------------------+\n",
            "|School DBN|    Date|Enrolled|Absent|Present|Released|Attendance_Percentage|\n",
            "+----------+--------+--------+------+-------+--------+---------------------+\n",
            "|    01M015|20180905|     172|    19|    153|       0|    88.95348837209302|\n",
            "|    01M015|20180906|     171|    17|    154|       0|    90.05847953216374|\n",
            "|    01M015|20180907|     172|    14|    158|       0|    91.86046511627907|\n",
            "|    01M015|20180912|     173|     7|    166|       0|    95.95375722543352|\n",
            "|    01M015|20180913|     173|     9|    164|       0|    94.79768786127167|\n",
            "|    01M015|20180914|     173|    11|    162|       0|    93.64161849710982|\n",
            "|    01M015|20180917|     173|    10|    163|       0|    94.21965317919076|\n",
            "|    01M015|20180918|     174|     7|    167|       0|    95.97701149425288|\n",
            "|    01M015|20180920|     174|     7|    167|       0|    95.97701149425288|\n",
            "|    01M015|20180921|     174|     8|    166|       0|    95.40229885057471|\n",
            "|    01M015|20180924|     174|    13|    161|       0|    92.52873563218391|\n",
            "|    01M015|20180925|     174|     9|    165|       0|    94.82758620689656|\n",
            "|    01M015|20180926|     174|     6|    168|       0|    96.55172413793103|\n",
            "|    01M015|20180927|     173|     7|    166|       0|    95.95375722543352|\n",
            "|    01M015|20180928|     173|    15|    158|       0|    91.32947976878613|\n",
            "|    01M015|20181001|     172|     4|    168|       0|    97.67441860465115|\n",
            "|    01M015|20181002|     172|     7|    165|       0|    95.93023255813954|\n",
            "|    01M015|20181003|     171|     8|    163|       0|    95.32163742690058|\n",
            "|    01M015|20181004|     171|    10|    161|       0|    94.15204678362574|\n",
            "|    01M015|20181005|     170|     8|    162|       0|    95.29411764705881|\n",
            "+----------+--------+--------+------+-------+--------+---------------------+\n",
            "only showing top 20 rows\n",
            "\n",
            "+----------+--------+--------+------+-------+--------+---------------------+\n",
            "|School DBN|    Date|Enrolled|Absent|Present|Released|Attendance_Percentage|\n",
            "+----------+--------+--------+------+-------+--------+---------------------+\n",
            "|    01M015|20180905|     172|    19|    153|       0|    88.95348837209302|\n",
            "|    01M015|20180906|     171|    17|    154|       0|    90.05847953216374|\n",
            "|    01M015|20180907|     172|    14|    158|       0|    91.86046511627907|\n",
            "|    01M015|20180912|     173|     7|    166|       0|    95.95375722543352|\n",
            "|    01M015|20180913|     173|     9|    164|       0|    94.79768786127167|\n",
            "|    01M015|20180914|     173|    11|    162|       0|    93.64161849710982|\n",
            "|    01M015|20180917|     173|    10|    163|       0|    94.21965317919076|\n",
            "|    01M015|20180918|     174|     7|    167|       0|    95.97701149425288|\n",
            "|    01M015|20180920|     174|     7|    167|       0|    95.97701149425288|\n",
            "|    01M015|20180921|     174|     8|    166|       0|    95.40229885057471|\n",
            "|    01M015|20180924|     174|    13|    161|       0|    92.52873563218391|\n",
            "|    01M015|20180925|     174|     9|    165|       0|    94.82758620689656|\n",
            "|    01M015|20180926|     174|     6|    168|       0|    96.55172413793103|\n",
            "|    01M015|20180927|     173|     7|    166|       0|    95.95375722543352|\n",
            "|    01M015|20180928|     173|    15|    158|       0|    91.32947976878613|\n",
            "|    01M015|20181001|     172|     4|    168|       0|    97.67441860465115|\n",
            "|    01M015|20181002|     172|     7|    165|       0|    95.93023255813954|\n",
            "|    01M015|20181003|     171|     8|    163|       0|    95.32163742690058|\n",
            "|    01M015|20181004|     171|    10|    161|       0|    94.15204678362574|\n",
            "|    01M015|20181005|     170|     8|    162|       0|    95.29411764705881|\n",
            "+----------+--------+--------+------+-------+--------+---------------------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    }
  ]
}